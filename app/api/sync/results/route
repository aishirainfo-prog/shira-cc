import { NextResponse } from 'next/server';
import { supabase } from '@/lib/supabase';
import { fetchTodayMatches } from '@/lib/providers/footballData';
export const runtime = 'nodejs';

export async function GET() {
  try {
    const { data } = await fetchTodayMatches();
    const matches = (data.matches || []).filter((m: any) =>
      ['FINISHED', 'IN_PLAY', 'PAUSED'].includes(m.status)
    );

    const rows = matches.map((m: any) => ({
      fixture_id: m.id,
      home_score: m.score?.fullTime?.home ?? m.score?.halfTime?.home ?? 0,
      away_score: m.score?.fullTime?.away ?? m.score?.halfTime?.away ?? 0,
      final: m.status === 'FINISHED'
    }));

    const { error } = await supabase
      .from('results')
      .upsert(rows, { onConflict: 'fixture_id' });

    if (error) throw error;

    return NextResponse.json({ ok: true, updated: rows.length });
  } catch (e: any) {
    return NextResponse.json({ ok: false, error: e.message }, { status: 500 });
  }
}
