import { NextResponse } from 'next/server'
import { supabase } from '@/lib/supabase'

function todayRangeUTC() {
  const d = new Date()
  const y = d.getUTCFullYear()
  const m = String(d.getUTCMonth() + 1).padStart(2, '0')
  const day = String(d.getUTCDate()).padStart(2, '0')
  const from = `${y}-${m}-${day}`
  const to = `${y}-${m}-${day}`
  return { from, to }
}

export async function GET() {
  try {
    const token = process.env.FOOTBALL_DATA_TOKEN
    if (!token) return NextResponse.json({ error: 'FOOTBALL_DATA_TOKEN mancante' }, { status: 400 })

    const { from, to } = todayRangeUTC()
    const url = `https://api.football-data.org/v4/matches?dateFrom=${from}&dateTo=${to}`
    const res = await fetch(url, { headers: { 'X-Auth-Token': token } })
    const json = await res.json()

    let updates = 0
    if (json.matches) {
      for (const m of json.matches) {
        const finished = m.status === 'FINISHED'
        const hs = m.score?.fullTime?.home ?? null
        const as = m.score?.fullTime?.away ?? null

        // aggiorna tabella results
        const { error } = await supabase
          .from('results')
          .upsert({
            fixture_id: m.id,
            home_score: hs,
            away_score: as,
            final: finished,
            updated_at: new Date().toISOString(),
          }, { onConflict: 'fixture_id' })
        if (error) throw error
        updates++
      }
    }

    return NextResponse.json({ ok: true, updates })
  } catch (e: any) {
    return NextResponse.json({ error: e.message || String(e) }, { status: 500 })
  }
}
